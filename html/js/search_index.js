var search_data = {"index":{"searchIndex":["autokey","kryptos","monoalphabetic","charactererror","playfair","transposition","vigenere","build_table()","build_table()","build_tabula_recta()","decrypt()","decrypt()","decrypt()","decrypt()","encrypt()","encrypt()","encrypt()","encrypt()","rot_13()","readme"],"longSearchIndex":["autokey","kryptos","monoalphabetic","monoalphabetic::charactererror","playfair","transposition","vigenere","playfair#build_table()","vigenere#build_table()","autokey#build_tabula_recta()","autokey#decrypt()","playfair#decrypt()","transposition#decrypt()","vigenere#decrypt()","autokey#encrypt()","playfair#encrypt()","transposition#encrypt()","vigenere#encrypt()","monoalphabetic#rot_13()",""],"info":[["Autokey","","Autokey.html","","<p>Encryption/decryption using autokey ciphers\n(en.wikipedia.org/wiki/Autokey_cipher)\n"],["Kryptos","","Kryptos.html","","<p>K1, K2, K3, K4\n<p>These are the four parts of the Kryptos sculpture\n(en.wikipedia.org/wiki/Kryptos).\n"],["Monoalphabetic","","Monoalphabetic.html","","<p>Assorted tools for encrypting/decrypting monoalphabetic substitution\nciphers (en.wikipedia.org/wiki/Substitution_cipher …\n"],["Monoalphabetic::CharacterError","","Monoalphabetic/CharacterError.html","","<p>An error raised when a non-alphabetic character is passed to an encryption/\ndecryption method.\n"],["Playfair","","Playfair.html","","<p>Encryption/decryption using Playfair ciphers\n(en.wikipedia.org/wiki/Playfair_cipher)\n"],["Transposition","","Transposition.html","","<p>Encryption/decryption using keyed columnar transposition\n(en.wikipedia.org/wiki/Transposition_cipher …\n"],["Vigenere","","Vigenere.html","","<p>Encryption/decryption using Vigenere ciphers\n(en.wikipedia.org/wiki/Vigen%C3%A8re_cipher)\n"],["build_table","Playfair","Playfair.html#method-i-build_table","(key)","<p>Public: builds the 5 x 5 grid for our Playfair cipher.\n<p>Parameter(s)\n<p><code>key</code> - <code>String</code>: the key forms the first …\n"],["build_table","Vigenere","Vigenere.html#method-i-build_table","(key1 = alphabet.join(''), key2)","<p>Public: builds the tableau needed for encryption/decryption.\n<p>Parameter(s)\n<p><code>key1</code> - <code>String</code>: the key found …\n"],["build_tabula_recta","Autokey","Autokey.html#method-i-build_tabula_recta","()","<p>Public: generates the tabula recta needed to encrypt text via autokey\ncipher.\n<p>Parameter(s)\n<p>None.\n"],["decrypt","Autokey","Autokey.html#method-i-decrypt","(ciphertext, table, keyword)","<p>Public: decrypts ciphertext via autokey cipher.\n<p>For each pair formed by the i-th index of the key and …\n"],["decrypt","Playfair","Playfair.html#method-i-decrypt","(ciphertext, grid)","<p>Public: decrypts ciphertext using a Playfair cipher.\n<p>If both elements of the pair are in the same row, …\n"],["decrypt","Transposition","Transposition.html#method-i-decrypt","(ciphertext, width)","<p>Public: decrypts text via keyed columnar transposition.\n<p>The decryption method converts the ciphertext …\n"],["decrypt","Vigenere","Vigenere.html#method-i-decrypt","(ciphertext, table, key)","<p>Public: decrypts plaintext using a Vigenere cipher.\n<p>For each letter in the ciphertext, we loop through …\n"],["encrypt","Autokey","Autokey.html#method-i-encrypt","(plaintext, table, keyword)","<p>Public: encrypts plaintext via autokey cipher.\n<p>We generate our key by prepending the keyword to the plaintext. …\n"],["encrypt","Playfair","Playfair.html#method-i-encrypt","(plaintext, grid)","<p>Public: encrypts plaintext using a Playfair cipher.\n<p>If both elements of the pair are in the same row, …\n"],["encrypt","Transposition","Transposition.html#method-i-encrypt","(plaintext, width)","<p>Public: encrypts text via keyed columnar transposition.\n<p>The encryption method converts the plaintext to …\n"],["encrypt","Vigenere","Vigenere.html#method-i-encrypt","(plaintext, table, key)","<p>Public: encrypts plaintext using a Vigenere cipher.\n<p>For each letter in the plaintext, we loop through …\n"],["rot_13","Monoalphabetic","Monoalphabetic.html#method-i-rot_13","(plaintext)","<p>Public: encrypts and decrypts text via ROT13 (en.wikipedia.org/wiki/ROT13).\n<p>Each letter is shifted by …\n"],["README","","README_md.html","","<p>D E K Я Y P T O S\n<p>About\n<p>These are little bits o&#39; Ruby magic I&#39;ve been using to mess around\nwith …\n"]]}}